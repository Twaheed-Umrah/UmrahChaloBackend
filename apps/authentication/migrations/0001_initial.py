# Generated by Django 5.2.4 on 2025-07-25 12:26

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('success', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Login Attempt',
                'verbose_name_plural': 'Login Attempts',
                'db_table': 'login_attempts',
            },
        ),
        migrations.CreateModel(
            name='SavedPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Saved Package',
                'verbose_name_plural': 'Saved Packages',
                'db_table': 'saved_packages',
            },
        ),
        migrations.CreateModel(
            name='ServiceProviderProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=255)),
                ('business_type', models.CharField(choices=[('individual', 'Individual'), ('company', 'Company'), ('agency', 'Travel Agency'), ('visa', 'Visa'), ('hotels', 'Hotels'), ('transport', 'Transport'), ('food', 'Food'), ('laundry', 'Laundry'), ('air_ticket_group_fare_umrah', 'Air Ticket Group Fare Umrah'), ('umrah_guide', 'Umrah Guide'), ('umrah_kit', 'Umrah Kit'), ('jam_jam_water', 'Jam Jam Water'), ('hajj_package', 'Hajj Package'), ('umrah_packages', 'Umrah Packages')], max_length=50)),
                ('business_description', models.TextField(blank=True)),
                ('business_logo', models.ImageField(blank=True, null=True, upload_to='business_logos/')),
                ('business_email', models.EmailField(max_length=254)),
                ('business_phone', models.CharField(max_length=17)),
                ('business_address', models.TextField()),
                ('business_city', models.CharField(max_length=100)),
                ('business_state', models.CharField(max_length=100)),
                ('business_country', models.CharField(max_length=100)),
                ('business_pincode', models.CharField(max_length=10)),
                ('government_id_type', models.CharField(max_length=50)),
                ('government_id_number', models.CharField(max_length=50)),
                ('government_id_document', models.FileField(upload_to='government_ids/')),
                ('gst_number', models.CharField(blank=True, max_length=15)),
                ('gst_certificate', models.FileField(blank=True, null=True, upload_to='gst_certificates/')),
                ('trade_license_number', models.CharField(blank=True, max_length=100, null=True)),
                ('trade_license_document', models.FileField(blank=True, null=True, upload_to='trade_licenses/')),
                ('verification_status', models.CharField(choices=[('pending', 'Pending'), ('verified', 'Verified'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('verification_notes', models.TextField(blank=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('total_packages', models.IntegerField(default=0)),
                ('total_leads', models.IntegerField(default=0)),
                ('total_bookings', models.IntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('total_reviews', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'serviceproviderprofiles',
                'verbose_name_plural': 'serviceproviderprofiles',
                'db_table': 'serviceproviderprofiles',
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('view_package', 'View Package'), ('inquiry_sent', 'Inquiry Sent'), ('package_saved', 'Package Saved'), ('search_performed', 'Search Performed')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'User Activity',
                'verbose_name_plural': 'User Activities',
                'db_table': 'user_activities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40)),
                ('device_info', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User Session',
                'verbose_name_plural': 'User Sessions',
                'db_table': 'user_sessions',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('user_type', models.CharField(choices=[('pilgrim', 'Pilgrim'), ('provider', 'Service Provider'), ('super_admin', 'Super Admin')], default='pilgrim', max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, help_text='Latitude coordinate', max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, help_text='Longitude coordinate', max_digits=11, null=True)),
                ('location_updated_at', models.DateTimeField(blank=True, help_text='Last time location was updated', null=True)),
                ('location_address', models.TextField(blank=True, help_text='Human readable address from coordinates', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='OTPVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.CharField(max_length=6)),
                ('purpose', models.CharField(choices=[('email_verification', 'Email Verification'), ('phone_verification', 'Phone Verification'), ('password_reset', 'Password Reset'), ('login', 'Login')], max_length=50)),
                ('is_used', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otp_verifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'OTP Verification',
                'verbose_name_plural': 'OTP Verifications',
                'db_table': 'otp_verifications',
            },
        ),
    ]
