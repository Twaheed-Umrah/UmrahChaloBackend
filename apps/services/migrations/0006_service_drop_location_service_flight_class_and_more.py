# Generated by Django 5.2.4 on 2025-08-21 06:19

import django.core.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0003_alter_user_phone'),
        ('services', '0005_alter_service_provider'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='service',
            name='drop_location',
            field=models.CharField(blank=True, max_length=200, verbose_name='Drop Location'),
        ),
        migrations.AddField(
            model_name='service',
            name='flight_class',
            field=models.CharField(blank=True, choices=[('economy', 'Economy'), ('business', 'Business'), ('first', 'First Class'), ('premium_economy', 'Premium Economy')], max_length=20, verbose_name='Flight Class'),
        ),
        migrations.AddField(
            model_name='service',
            name='flight_from',
            field=models.CharField(blank=True, help_text='Origin airport/city for flight', max_length=100, verbose_name='Flight From'),
        ),
        migrations.AddField(
            model_name='service',
            name='flight_to',
            field=models.CharField(blank=True, help_text='Destination airport/city for flight', max_length=100, verbose_name='Flight To'),
        ),
        migrations.AddField(
            model_name='service',
            name='hotel_amenities',
            field=models.JSONField(blank=True, default=list, help_text='List of hotel amenities', verbose_name='Hotel Amenities'),
        ),
        migrations.AddField(
            model_name='service',
            name='hotel_room_type',
            field=models.CharField(blank=True, help_text='Type of room (Single, Double, Suite, etc.)', max_length=100, verbose_name='Room Type'),
        ),
        migrations.AddField(
            model_name='service',
            name='hotel_star_rating',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Star Rating'),
        ),
        migrations.AddField(
            model_name='service',
            name='packaging_type',
            field=models.CharField(blank=True, choices=[('bottle', 'Bottle'), ('container', 'Container'), ('can', 'Can'), ('pouch', 'Pouch')], max_length=50, verbose_name='Packaging Type'),
        ),
        migrations.AddField(
            model_name='service',
            name='pickup_location',
            field=models.CharField(blank=True, max_length=200, verbose_name='Pickup Location'),
        ),
        migrations.AddField(
            model_name='service',
            name='transport_type',
            field=models.CharField(blank=True, choices=[('bus', 'Bus'), ('car', 'Car'), ('taxi', 'Taxi'), ('van', 'Van'), ('coach', 'Coach')], max_length=50, verbose_name='Transport Type'),
        ),
        migrations.AddField(
            model_name='service',
            name='vehicle_capacity',
            field=models.IntegerField(blank=True, help_text='Number of passengers', null=True, verbose_name='Vehicle Capacity'),
        ),
        migrations.AddField(
            model_name='service',
            name='water_capacity',
            field=models.CharField(blank=True, help_text='Capacity of Zamzam water (e.g., 500ml, 1L, 5L)', max_length=50, verbose_name='Water Capacity'),
        ),
        migrations.AddField(
            model_name='service',
            name='water_capacity_liters',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Numerical capacity in liters for filtering', max_digits=5, null=True, verbose_name='Capacity in Liters'),
        ),
        migrations.AddField(
            model_name='service',
            name='water_source',
            field=models.CharField(blank=True, help_text='Source/origin of Zamzam water', max_length=100, verbose_name='Water Source'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['flight_from', 'flight_to'], name='services_se_flight__b11e30_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['water_capacity_liters'], name='services_se_water_c_9f70d9_idx'),
        ),
    ]
