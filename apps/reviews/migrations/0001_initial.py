# Generated by Django 5.2.5 on 2025-09-01 07:16

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        ('packages', '0001_initial'),
        ('services', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Review',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.IntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(max_length=200)),
                ('comment', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('is_verified_purchase', models.BooleanField(default=False)),
                ('helpful_count', models.PositiveIntegerField(default=0)),
                ('reported_count', models.PositiveIntegerField(default=0)),
                ('reviewed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='packages.package')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='authentication.serviceproviderprofile')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='services.service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reviews',
                'ordering': ['-reviewed_at'],
            },
        ),
        migrations.CreateModel(
            name='ReviewHelpful',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_helpful', models.BooleanField(default=True)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='helpful_votes', to='reviews.review')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='helpful_votes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'review_helpful',
            },
        ),
        migrations.CreateModel(
            name='ReviewReport',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('reason', models.CharField(choices=[('spam', 'Spam'), ('inappropriate', 'Inappropriate Content'), ('fake', 'Fake Review'), ('offensive', 'Offensive Language'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('reviewed', 'Reviewed'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='pending', max_length=20)),
                ('admin_notes', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_reports', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_reports', to=settings.AUTH_USER_MODEL)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='reviews.review')),
            ],
            options={
                'db_table': 'review_reports',
            },
        ),
        migrations.CreateModel(
            name='ReviewResponse',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('response_text', models.TextField()),
                ('is_official', models.BooleanField(default=True)),
                ('responder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_responses', to=settings.AUTH_USER_MODEL)),
                ('review', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='response', to='reviews.review')),
            ],
            options={
                'db_table': 'review_responses',
            },
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['service', 'status'], name='reviews_service_78bc4d_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['package', 'status'], name='reviews_package_323baf_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['rating'], name='reviews_rating_17e8a4_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['reviewed_at'], name='reviews_reviewe_e8bfbb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('user', 'package'), ('user', 'service')},
        ),
        migrations.AddIndex(
            model_name='reviewhelpful',
            index=models.Index(fields=['review', 'is_helpful'], name='review_help_review__eab5c7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reviewhelpful',
            unique_together={('review', 'user')},
        ),
        migrations.AddIndex(
            model_name='reviewreport',
            index=models.Index(fields=['status'], name='review_repo_status_d76781_idx'),
        ),
        migrations.AddIndex(
            model_name='reviewreport',
            index=models.Index(fields=['reason'], name='review_repo_reason_0ff2cd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reviewreport',
            unique_together={('review', 'reporter')},
        ),
        migrations.AddIndex(
            model_name='reviewresponse',
            index=models.Index(fields=['review'], name='review_resp_review__8fe823_idx'),
        ),
    ]
