# Generated by Django 5.2.4 on 2025-07-25 12:26

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('services', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Package',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('package_type', models.CharField(choices=[('hajj', 'Hajj'), ('umrah', 'Umrah'), ('both', 'Hajj & Umrah')], max_length=10)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('discounted_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('duration_days', models.PositiveIntegerField(help_text='Package duration in days')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('booking_deadline', models.DateField(help_text='Last date for booking this package')),
                ('max_capacity', models.PositiveIntegerField(default=50)),
                ('current_bookings', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('verified', 'Verified'), ('published', 'Published'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='package_images/')),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('leads_count', models.PositiveIntegerField(default=0)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('reviews_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packages', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_packages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PackageAvailability',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('available_slots', models.PositiveIntegerField(default=0)),
                ('price_adjustment', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_available', models.BooleanField(default=True)),
                ('color_code', models.CharField(default='#28a745', help_text='Color code for calendar display', max_length=7)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='packages.package')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='PackageExclusion',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exclusions', to='packages.package')),
            ],
            options={
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='PackageImage',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='package_images/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('is_featured', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='packages.package')),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='PackageInclusion',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_highlighted', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inclusions', to='packages.package')),
            ],
            options={
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='PackageItinerary',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('day_number', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('location', models.CharField(blank=True, max_length=200)),
                ('activities', models.JSONField(blank=True, default=list)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itineraries', to='packages.package')),
            ],
            options={
                'ordering': ['day_number'],
            },
        ),
        migrations.CreateModel(
            name='PackagePolicy',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_type', models.CharField(choices=[('cancellation', 'Cancellation Policy'), ('payment', 'Payment Policy'), ('refund', 'Refund Policy'), ('terms', 'Terms & Conditions')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('order', models.PositiveIntegerField(default=0)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policies', to='packages.package')),
            ],
            options={
                'ordering': ['order', 'policy_type'],
            },
        ),
        migrations.CreateModel(
            name='PackageService',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_included', models.BooleanField(default=True)),
                ('is_optional', models.BooleanField(default=False)),
                ('additional_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('notes', models.TextField(blank=True)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_services', to='packages.package')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_services', to='services.service')),
            ],
        ),
        migrations.AddIndex(
            model_name='package',
            index=models.Index(fields=['status', 'is_active'], name='packages_pa_status_7dccb0_idx'),
        ),
        migrations.AddIndex(
            model_name='package',
            index=models.Index(fields=['package_type', 'start_date'], name='packages_pa_package_bb04be_idx'),
        ),
        migrations.AddIndex(
            model_name='package',
            index=models.Index(fields=['provider', 'status'], name='packages_pa_provide_d6436e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='packageavailability',
            unique_together={('package', 'date')},
        ),
        migrations.AlterUniqueTogether(
            name='packageitinerary',
            unique_together={('package', 'day_number')},
        ),
        migrations.AlterUniqueTogether(
            name='packagepolicy',
            unique_together={('package', 'policy_type')},
        ),
        migrations.AlterUniqueTogether(
            name='packageservice',
            unique_together={('package', 'service')},
        ),
    ]
